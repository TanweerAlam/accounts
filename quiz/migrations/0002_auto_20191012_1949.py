# Generated by Django 2.2.5 on 2019-10-12 14:19

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('quiz', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='difficulty',
            options={'verbose_name': 'Difficulty'},
        ),
        migrations.AlterModelOptions(
            name='quiz',
            options={'verbose_name': 'Quiz', 'verbose_name_plural': 'Quizzes'},
        ),
        migrations.AddField(
            model_name='quiz',
            name='answers_at_end',
            field=models.BooleanField(default=True, help_text='Correct answer is NOT shown after question. Answers displayed at the end.', verbose_name='Answers at end'),
        ),
        migrations.AddField(
            model_name='quiz',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='quiz.Category', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='quiz',
            name='description',
            field=models.TextField(blank=True, help_text='a description of the quiz', verbose_name='Description'),
        ),
        migrations.AddField(
            model_name='quiz',
            name='draft',
            field=models.BooleanField(blank=True, default=False, help_text='If yes, the quiz is not displayed in the quiz list and can only be taken by users who can edit quizzes.', verbose_name='Draft'),
        ),
        migrations.AddField(
            model_name='quiz',
            name='exam_paper',
            field=models.BooleanField(default=False, help_text='If yes, the result of each attempt by a user will be stored. Necessary for marking.', verbose_name='Exam Paper'),
        ),
        migrations.AddField(
            model_name='quiz',
            name='fail_text',
            field=models.TextField(blank=True, help_text='Displayed if user fails.', verbose_name='Fail Text'),
        ),
        migrations.AddField(
            model_name='quiz',
            name='max_questions',
            field=models.PositiveIntegerField(blank=True, default=10, help_text='Number of questions to be answered on each attempt.', verbose_name='Max Questions'),
        ),
        migrations.AddField(
            model_name='quiz',
            name='pass_mark',
            field=models.SmallIntegerField(blank=True, default=0, help_text='Percentage required to pass exam.', validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Pass Mark'),
        ),
        migrations.AddField(
            model_name='quiz',
            name='random_order',
            field=models.BooleanField(default=False, help_text='Display the questions in a random order or as they are set?', verbose_name='Random Order'),
        ),
        migrations.AddField(
            model_name='quiz',
            name='single_attempt',
            field=models.BooleanField(default=False, help_text='If yes, only one attempt by a user will be permitted. Non users cannot sit this exam.', verbose_name='Single Attempt'),
        ),
        migrations.AddField(
            model_name='quiz',
            name='success_text',
            field=models.TextField(blank=True, help_text='Displayed if user passes.', verbose_name='Success Text'),
        ),
        migrations.AddField(
            model_name='quiz',
            name='title',
            field=models.CharField(default='Title of the quiz', max_length=60, verbose_name='Title'),
        ),
        migrations.AddField(
            model_name='quiz',
            name='url',
            field=models.SlugField(default='slug-is-used-as-a-url', help_text='a user friendly url', max_length=60, verbose_name='user friendly url'),
        ),
    ]
